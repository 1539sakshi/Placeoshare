{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","user/pages/Reset.js","user/pages/New-pass.js","App.js","index.js"],"names":["logouttimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","console","log","fetchUsers","openSocket","transports","on","data","action","updateduser","updateduserindex","findIndex","place","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","NewPlace","auth","useContext","title","description","address","placeimage","inputHandler","history","useHistory","placeSubmitHandler","formdata","FormData","append","Authorization","Mapw","mapRef","zoom","window","google","maps","Map","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","updatedplaces","index","find","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","formData","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Reset","Newpass","params","App","routes","settoken","setUserId","remainingtime","setremainingtime","userData","parse","localStorage","getItem","Date","expiration","remaining","getTime","setTimeout","clearTimeout","uid","expirationdate","tokenExpirationDate","setItem","toISOString","removeItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.79596457.chunk.js","sourcesContent":["import { useEffect, useCallback, useState } from 'react';\r\n\r\nlet logouttimer;\r\nexport const useAuth = () => {\r\n  const [token, settoken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [remainingtime, setremainingtime] = useState(null);\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    console.log(userData);\r\n    if (\r\n      userData !== null &&\r\n      userData.token &&\r\n      new Date(userData.expiration) > new Date()\r\n    ) {\r\n      login(userData.userId, userData.token, userData.expiration);\r\n    } else if (userData && new Date(userData.expiration) < new Date()) {\r\n      logout();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && remainingtime) {\r\n      const remaining = remainingtime.getTime() - new Date().getTime();\r\n      logouttimer = setTimeout(logout, remaining);\r\n    } else {\r\n      clearTimeout(logouttimer);\r\n    }\r\n  }, [token, remainingtime]);\r\n\r\n\r\n  const login = useCallback((uid, token, expirationdate) => {\r\n    settoken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n       new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setremainingtime(expirationdate?new Date(expirationdate):tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: expirationdate?expirationdate:tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    settoken(null);\r\n    setUserId(null);\r\n    setremainingtime(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  return { login, logout, token, userId };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`http://localhost:5000/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError ,setError};\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/users\"\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n        console.log(\"response\", responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n  useEffect(() => {\r\n    const socket = openSocket(\"http://localhost:5000\", {\r\n      transports: [\"websocket\"],\r\n    });\r\n\r\n    socket.on(\"places\", async (data) => {\r\n      console.log(\"data \", data);\r\n      if (data.action === \"create\") {\r\n        console.log(\"inside\", loadedUsers);\r\n\r\n        const response = await fetch(\"http://localhost:5000/api/users\");\r\n        const responseData = await response.json();\r\n        const updateduser = [...responseData.users];\r\n\r\n        const updateduserindex = updateduser.findIndex(\r\n          (user) => user.id === data.user.id\r\n        );\r\n\r\n        if (updateduserindex >= 0) {\r\n          updateduser[updateduserindex].places.push(data.place);\r\n        }\r\n        setLoadedUsers(updateduser);\r\n      }\r\n    });\r\n\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token:null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      placeimage: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const formdata = new FormData();\r\n    formdata.append('title', formState.inputs.title.value);\r\n    formdata.append('description', formState.inputs.description.value);\r\n    formdata.append('address', formState.inputs.address.value);\r\n    \r\n    formdata.append('place-image', formState.inputs.placeimage.value);\r\n    try {\r\n      await sendRequest('http://localhost:5000/api/places', 'POST', formdata, {\r\n        Authorization: 'Bearer ' + auth.token,\r\n      });\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className='place-form' onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id='title'\r\n          element='input'\r\n          type='text'\r\n          label='Title'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid title.'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='description'\r\n          element='textarea'\r\n          label='Description'\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText='Please enter a valid description (at least 5 characters).'\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          center\r\n          id='placeimage'\r\n          onInput={inputHandler}\r\n          errorText='Please provide an image.'\r\n        />\r\n        <Input\r\n          id='address'\r\n          element='input'\r\n          label='Address'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid address.'\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type='submit' disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport \"./Map.css\";\r\n\r\nconst mapstyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst Mapw = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\nconsole.log(center);\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n    console.log(map);\r\n    new window.google.maps.Marker({\r\n      position:center,\r\n      map: map,\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n    // <Map zoom={14} styles={mapstyles} initialCenter={center} />\r\n  );\r\n};\r\n\r\nexport default Mapw;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `http://localhost:5000/api/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization:'Bearer '+auth.token\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={`http://localhost:5000/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map(place => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport openSocket from \"socket.io-client\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError,setError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  useEffect(() => {\r\n    const socket = openSocket(\"http://localhost:5000\", {\r\n      transports: [\"websocket\"],\r\n    });\r\n\r\n    socket.on(\"places\", async (data) => {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/places/user/${userId}`\r\n      );\r\n      const responseData = await response.json();\r\n      console.log('data',responseData);\r\n      if (responseData.places && responseData.places.length >= 0 ) {\r\n        let updatedplaces = [...responseData.places];\r\n\r\n        if (data.action === \"create\") {\r\n          if (userId === data.user.id) {\r\n            updatedplaces.push(data.place);\r\n          }\r\n        } else if (data.action === \"update\") {\r\n          const index = updatedplaces.find(\r\n            (place) => place.id === data.place.id\r\n          );\r\n          updatedplaces[index] = data.place;\r\n        } else if (data.action === \"delete\") {\r\n          updatedplaces = updatedplaces.filter(\r\n            (place) => place.id !== data.place.id\r\n          );\r\n        }\r\n        setLoadedPlaces(updatedplaces);\r\n      }else{\r\n        setError(\"No place found for this user\")\r\n        setLoadedPlaces(null)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/${placeId}`,\r\n          'GET',\r\n          null,\r\n          {\r\n            Authorization:'Bearer '+auth.token\r\n          }\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `http://localhost:5000/api/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization:'Bearer '+auth.token\r\n        }\r\n      );\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        console.log(responseData);\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n        console.log(responseData);\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        {isLoginMode && (\r\n          <Link className=\"resetlink\" to=\"/reset\">\r\n            Reset password\r\n          </Link>\r\n        )}\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Place-o-share</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from 'react'\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { VALIDATOR_EMAIL } from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHistory } from \"react-router\";\r\nconst Reset = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\nconst history=useHistory()\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/users/reset\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      console.log(responseData);\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Reset password</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Reset\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import { useParams } from \"react-router\";\r\nimport React from 'react'\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHistory } from \"react-router\";\r\nimport { VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nconst Newpass = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const params = useParams();\r\n  const history=useHistory()\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        \"http://localhost:5000/api/users/new-password\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formState.inputs.password.value,\r\n          token:params.token,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      console.log(responseData);\r\n      history.push(\"/auth\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Reset password</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Newpass;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport Users from \"./user/pages/Users\";\r\nimport NewPlace from \"./places/pages/NewPlace\";\r\nimport UserPlaces from \"./places/pages/UserPlaces\";\r\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\r\nimport Auth from \"./user/pages/Auth\";\r\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport Reset from \"./user/pages/Reset\";\r\nimport Newpass from \"./user/pages/New-pass\";\r\nconst App = () => {\r\n  const { login, logout, token, userId } = useAuth();\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Route path=\"/reset\" exact>\r\n          <Reset />\r\n        </Route>\r\n        <Route path=\"/reset/:token\" exact>\r\n          <Newpass />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>{routes}</main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}